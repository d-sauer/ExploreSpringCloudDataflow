plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
	id 'maven-publish'
	id 'signing'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.ds.dataflow.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
	from javadoc
	archiveClassifier = 'javadoc'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
	repositories {
		maven {
			name "S3"
			url "s3://davorpublic/maven"
			credentials(AwsCredentials) {
				accessKey "AKIAQ4RZ5646BBZOYVXT"
				secretKey "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"
			}
		}
	}
}


javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}